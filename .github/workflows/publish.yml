name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Verify version consistency
      run: |
        # Extract version from git tag
        TAG_VERSION="${GITHUB_REF#refs/tags/v}"
        echo "Tag version: $TAG_VERSION"
        
        # Extract version from pyproject.toml
        PYPROJECT_VERSION=$(python -c "
        import re
        with open('pyproject.toml', 'r') as f:
            content = f.read()
        match = re.search(r'^version = \"([^\"]*)\"', content, re.MULTILINE)
        print(match.group(1))
        ")
        echo "PyProject version: $PYPROJECT_VERSION"
        
        # Extract version from __init__.py
        INIT_VERSION=$(python -c "
        import re
        with open('src/mosaic/__init__.py', 'r') as f:
            content = f.read()
        match = re.search(r'^__version__ = \"([^\"]*)\"', content, re.MULTILINE)
        print(match.group(1))
        ")
        echo "Init version: $INIT_VERSION"
        
        # Verify all versions match
        if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ] || [ "$TAG_VERSION" != "$INIT_VERSION" ]; then
          echo "Version mismatch detected!"
          echo "Tag: $TAG_VERSION"
          echo "PyProject: $PYPROJECT_VERSION"
          echo "Init: $INIT_VERSION"
          exit 1
        fi
        
        echo "All versions match: $TAG_VERSION"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1